#!/usr/bin/env python3

"""A bridge that reads a text file or a Workflowy update .eml file and adds a Motion/Todoist task for new lines matching a @name
"""

import argparse
import os
import sys

from fmotion import flowymotion


def main(arguments):

    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument('-a', '--atn', help="find names (optionally comma separated)", required=False, type=str)
    parser.add_argument('-e', '--eml', help="Read from workflowy .eml", required=False, type=str)
    parser.add_argument('-l', '--lns', help="Read lines from text file", required=False, type=str)
    parser.add_argument('-d', help="Dry run", action="store_true")
    parser.add_argument('-t', help="Write tasks to Todoist", action="store_true")
    parser.add_argument('-m', help="Write tasks to Motion (default)", action="store_true")
    parser.add_argument('-w', '--workspaces', help="List Motion workspaces", action="store_true")

    args = parser.parse_args(arguments)

    def usage_error(parser, msg):
        print(f"\nERROR: {msg}\n")
        parser.print_help()
        sys.exit(1)

    if not args.workspaces and not args.eml and not args.lns:
        usage_error(parser, "emailfile (-e or --eml) or text file (-l or --lns) required unless checking workspaces");
    

    conf = flowymotion.WmConf("conf/flowymotion.json");
    
    if args.atn:
        conf.atname=args.atn
    if args.workspaces:
        workreader = flowymotion.MotionWorkspaceReader(conf)
        workreader.readWorkspaces()
    else:
        if args.lns:
            path=args.lns
            reader = flowymotion.TextReader(conf)
        else:
            path=args.eml
            reader = flowymotion.WorkflowyMailReader(conf)
        reader.process(path)
        #raise SystemExit
        writers=[]
        if args.t:
            writers.append(flowymotion.TodoistTaskWriter(conf, reader.get_items()))
        if args.m or not args.t:
            writers.append(flowymotion.MotionTaskWriter(conf, reader.get_items()))
        if not args.d:
            for writer in writers:
                writer.write_all()

if __name__ == '__main__':
    main(sys.argv[1:])

